<?php

/*
 * This file is part of the 20steps Bricks module.
 *
 * (c) 2017 20steps
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */
if (PHP_SAPI === 'cli' && !defined('EKINO_DRUSH_FROM')) {
	symfony_boot('drush');
}

/**
 * @param string $mode
 * @return void
 */
function symfony_boot($mode)
{
  global $container, $conf;

  if (!$container && PHP_SAPI === 'cli' && $mode == 'drush') {
    if (!isset($conf['bricks']['kernel_factory'])) {
      require_once sprintf('%s/%s/bootstrap.php.cache', $conf['bricks']['root'], 'app');
      require_once sprintf('%s/%s/AppKernel.php', $conf['bricks']['root'], 'app');

      $kernelName = 'AppKernel';
    } else {
      $kernelName = $conf['bricks']['kernel_factory']($conf);
    }

    echo "[Bricks] Booting Kernel ";

    $content = ob_get_flush();
    $kernel = new $kernelName($conf['bricks'][$mode]['env'], $conf['bricks'][$mode]['debug']);
    $kernel->loadClassCache();
    $kernel->boot();

    echo " ... ok! \n";

    echo "[Bricks] Loading container ";
    $container = $kernel->getContainer();

    echo " ... ok! \n";

    ob_start();
    echo $content;
  }
}
/**
 * @return \Symfony\Component\DependencyInjection\ContainerInterface
 */
function symfony_container()
{
  global $container;

  if (!$container) {
    throw new RuntimeException('No symfony container available');
  }

  return $container;
}

/**
 * @param $name
 * @return object
 */
function symfony_service($name)
{
  return symfony_container()->get($name);
}

require_once __DIR__.'/twentysteps_bricks_bridge_event.inc';
require_once __DIR__.'/twentysteps_bricks_bridge_user_hook.inc';
require_once __DIR__.'/twentysteps_bricks_bridge_schema.inc';